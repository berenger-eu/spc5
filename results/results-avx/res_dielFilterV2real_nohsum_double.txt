RUN mx with matrix = ./matrices//dielFilterV2real/dielFilterV2real.mtx real = double
           0/24848204 :   0% [>                    ]      248482/24848204 :   1% [>                    ]      496964/24848204 :   2% [>                    ]      745446/24848204 :   3% [>                    ]      993928/24848204 :   4% [>                    ]     1242410/24848204 :   5% [>                   ]     1490892/24848204 :   6% [>                   ]     1739374/24848204 :   7% [>                   ]     1987856/24848204 :   8% [>                   ]     2236338/24848204 :   9% [>                   ]     2484820/24848204 :  10% [=>                  ]     2733302/24848204 :  11% [=>                  ]     2981784/24848204 :  12% [=>                  ]     3230266/24848204 :  13% [=>                  ]     3478748/24848204 :  14% [=>                  ]     3727230/24848204 :  15% [==>                 ]     3975712/24848204 :  16% [==>                 ]     4224194/24848204 :  17% [==>                 ]     4472676/24848204 :  18% [==>                 ]     4721158/24848204 :  19% [==>                 ]     4969640/24848204 :  20% [===>                ]     5218122/24848204 :  21% [===>                ]     5466604/24848204 :  22% [===>                ]     5715086/24848204 :  23% [===>                ]     5963568/24848204 :  24% [===>                ]     6212050/24848204 :  25% [====>               ]     6460533/24848204 :  26% [====>               ]     6709015/24848204 :  27% [====>               ]     6957497/24848204 :  28% [====>               ]     7205979/24848204 :  29% [====>               ]     7454461/24848204 :  30% [=====>              ]     7702943/24848204 :  31% [=====>              ]     7951425/24848204 :  32% [=====>              ]     8199907/24848204 :  33% [=====>              ]     8448389/24848204 :  34% [=====>              ]     8696871/24848204 :  35% [======>             ]     8945353/24848204 :  36% [======>             ]     9193835/24848204 :  37% [======>             ]     9442317/24848204 :  38% [======>             ]     9690799/24848204 :  39% [======>             ]     9939281/24848204 :  40% [=======>            ]    10187763/24848204 :  41% [=======>            ]    10436245/24848204 :  42% [=======>            ]    10684727/24848204 :  43% [=======>            ]    10933209/24848204 :  44% [=======>            ]    11181691/24848204 :  45% [========>           ]    11430173/24848204 :  46% [========>           ]    11678655/24848204 :  47% [========>           ]    11927137/24848204 :  48% [========>           ]    12175619/24848204 :  49% [========>           ]    12424101/24848204 :  50% [=========>          ]    12672584/24848204 :  51% [=========>          ]    12921066/24848204 :  52% [=========>          ]    13169548/24848204 :  53% [=========>          ]    13418030/24848204 :  54% [=========>          ]    13666512/24848204 :  55% [==========>         ]    13914994/24848204 :  56% [==========>         ]    14163476/24848204 :  57% [==========>         ]    14411958/24848204 :  58% [==========>         ]    14660440/24848204 :  59% [==========>         ]    14908922/24848204 :  60% [===========>        ]    15157404/24848204 :  61% [===========>        ]    15405886/24848204 :  62% [===========>        ]    15654368/24848204 :  63% [===========>        ]    15902850/24848204 :  64% [===========>        ]    16151332/24848204 :  65% [============>       ]    16399814/24848204 :  66% [============>       ]    16648296/24848204 :  67% [============>       ]    16896778/24848204 :  68% [============>       ]    17145260/24848204 :  69% [============>       ]    17393742/24848204 :  70% [=============>      ]    17642224/24848204 :  71% [=============>      ]    17890706/24848204 :  72% [=============>      ]    18139188/24848204 :  73% [=============>      ]    18387670/24848204 :  74% [=============>      ]    18636152/24848204 :  75% [==============>     ]    18884635/24848204 :  76% [==============>     ]    19133117/24848204 :  77% [==============>     ]    19381599/24848204 :  78% [==============>     ]    19630081/24848204 :  79% [==============>     ]    19878563/24848204 :  80% [===============>    ]    20127045/24848204 :  81% [===============>    ]    20375527/24848204 :  82% [===============>    ]    20624009/24848204 :  83% [===============>    ]    20872491/24848204 :  84% [===============>    ]    21120973/24848204 :  85% [================>   ]    21369455/24848204 :  86% [================>   ]    21617937/24848204 :  87% [================>   ]    21866419/24848204 :  88% [================>   ]    22114901/24848204 :  89% [================>   ]    22363383/24848204 :  90% [=================>  ]    22611865/24848204 :  91% [=================>  ]    22860347/24848204 :  92% [=================>  ]    23108829/24848204 :  93% [=================>  ]    23357311/24848204 :  94% [=================>  ]    23605793/24848204 :  95% [==================> ]    23854275/24848204 :  96% [==================> ]    24102757/24848204 :  97% [==================> ]    24351239/24848204 :  98% [==================> ]    24599721/24848204 :  99% [==================> ]    24848203/24848204 : 100% [===================>]
-> number of rows = 1157456
-> number of columns = 1157456
-> number of values = 48538952
-> number of values per row = 41.9359
-> number loops to smooth the timing if > 1 =  16
-> number of flops to do per spmv = 1553246464
Start usual CSR: 1157456
Conversion in : 0.41945s
-> Done in 1.13416s
-> GFlops 1.36951s
-> Esimated performance are 2.11754 for 1rVc_WT
Start MKL CSR: 
Conversion in : 0.605969s
-> Done in 0.881338s
-> GFlops 1.76237s
-> Max Difference in Accuracy 2.97172e-11
Start usual 1rVc: 
Conversion in : 2.90373s
-> Done in 1.01148s
-> Number of blocks 19000662( avg. 2.55459 values per block)
-> GFlops 1.53562s
-> Max Difference in Accuracy 3.71494e-11
Start usual 2rVc: 
Conversion in : 3.09416s
-> Done in 0.973031s
-> Number of blocks 13552491( avg. 3.58155 values per block)
-> GFlops 1.5963s
-> Max Difference in Accuracy 5.12254e-11
Start usual 4rVc: 
Conversion in : 3.11026s
-> Done in 1.06103s
-> Number of blocks 9525610( avg. 5.09563 values per block)
-> GFlops 1.4639s
-> Max Difference in Accuracy 5.12254e-11
Start usual 8rVc: 
Conversion in : 3.19358s
-> Done in 1.29013s
-> Number of blocks 6767876( avg. 7.17196 values per block)
-> GFlops 1.20394s
-> Max Difference in Accuracy 4.41169e-11
===================================================
Openmp is enabled with 36 threads per default
Start openmp 1rVc: 
-> Done in 0.0569516s
-> Number of blocks 19000662( avg. 2.55459 values per block)
-> GFlops 27.2731s
-> Max Difference in Accuracy 3.71494e-11
Start openmp 2rVc: 
-> Done in 0.0501494s
-> Number of blocks 13552491( avg. 3.58155 values per block)
-> GFlops 30.9724s
-> Max Difference in Accuracy 5.12254e-11
Start openmp 4rVc: 
-> Done in 0.0516899s
-> Number of blocks 9525610( avg. 5.09563 values per block)
-> GFlops 30.0493s
-> Max Difference in Accuracy 5.12254e-11
Start openmp 8rVc: 
-> Done in 0.0569056s
-> Number of blocks 6767876( avg. 7.17196 values per block)
-> GFlops 27.2952s
-> Max Difference in Accuracy 4.41169e-11
