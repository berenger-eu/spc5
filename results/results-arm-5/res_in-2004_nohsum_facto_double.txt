RUN mx with matrix = ./matrices//in-2004/in-2004.mtx real = double
           0/16917053 :   0% [>                    ]      169170/16917053 :   1% [>                    ]      338341/16917053 :   2% [>                    ]      507511/16917053 :   3% [>                    ]      676682/16917053 :   4% [>                    ]      845852/16917053 :   5% [>                   ]     1015023/16917053 :   6% [>                   ]     1184193/16917053 :   7% [>                   ]     1353364/16917053 :   8% [>                   ]     1522534/16917053 :   9% [>                   ]     1691705/16917053 :  10% [=>                  ]     1860875/16917053 :  11% [=>                  ]     2030046/16917053 :  12% [=>                  ]     2199216/16917053 :  13% [=>                  ]     2368387/16917053 :  14% [=>                  ]     2537557/16917053 :  15% [==>                 ]     2706728/16917053 :  16% [==>                 ]     2875899/16917053 :  17% [==>                 ]     3045069/16917053 :  18% [==>                 ]     3214240/16917053 :  19% [==>                 ]     3383410/16917053 :  20% [===>                ]     3552581/16917053 :  21% [===>                ]     3721751/16917053 :  22% [===>                ]     3890922/16917053 :  23% [===>                ]     4060092/16917053 :  24% [===>                ]     4229263/16917053 :  25% [====>               ]     4398433/16917053 :  26% [====>               ]     4567604/16917053 :  27% [====>               ]     4736774/16917053 :  28% [====>               ]     4905945/16917053 :  29% [====>               ]     5075115/16917053 :  30% [=====>              ]     5244286/16917053 :  31% [=====>              ]     5413456/16917053 :  32% [=====>              ]     5582627/16917053 :  33% [=====>              ]     5751798/16917053 :  34% [=====>              ]     5920968/16917053 :  35% [======>             ]     6090139/16917053 :  36% [======>             ]     6259309/16917053 :  37% [======>             ]     6428480/16917053 :  38% [======>             ]     6597650/16917053 :  39% [======>             ]     6766821/16917053 :  40% [=======>            ]     6935991/16917053 :  41% [=======>            ]     7105162/16917053 :  42% [=======>            ]     7274332/16917053 :  43% [=======>            ]     7443503/16917053 :  44% [=======>            ]     7612673/16917053 :  45% [========>           ]     7781844/16917053 :  46% [========>           ]     7951014/16917053 :  47% [========>           ]     8120185/16917053 :  48% [========>           ]     8289355/16917053 :  49% [========>           ]     8458526/16917053 :  50% [=========>          ]     8627697/16917053 :  51% [=========>          ]     8796867/16917053 :  52% [=========>          ]     8966038/16917053 :  53% [=========>          ]     9135208/16917053 :  54% [=========>          ]     9304379/16917053 :  55% [==========>         ]     9473549/16917053 :  56% [==========>         ]     9642720/16917053 :  57% [==========>         ]     9811890/16917053 :  58% [==========>         ]     9981061/16917053 :  59% [==========>         ]    10150231/16917053 :  60% [===========>        ]    10319402/16917053 :  61% [===========>        ]    10488572/16917053 :  62% [===========>        ]    10657743/16917053 :  63% [===========>        ]    10826913/16917053 :  64% [===========>        ]    10996084/16917053 :  65% [============>       ]    11165254/16917053 :  66% [============>       ]    11334425/16917053 :  67% [============>       ]    11503596/16917053 :  68% [============>       ]    11672766/16917053 :  69% [============>       ]    11841937/16917053 :  70% [=============>      ]    12011107/16917053 :  71% [=============>      ]    12180278/16917053 :  72% [=============>      ]    12349448/16917053 :  73% [=============>      ]    12518619/16917053 :  74% [=============>      ]    12687789/16917053 :  75% [==============>     ]    12856960/16917053 :  76% [==============>     ]    13026130/16917053 :  77% [==============>     ]    13195301/16917053 :  78% [==============>     ]    13364471/16917053 :  79% [==============>     ]    13533642/16917053 :  80% [===============>    ]    13702812/16917053 :  81% [===============>    ]    13871983/16917053 :  82% [===============>    ]    14041153/16917053 :  83% [===============>    ]    14210324/16917053 :  84% [===============>    ]    14379495/16917053 :  85% [================>   ]    14548665/16917053 :  86% [================>   ]    14717836/16917053 :  87% [================>   ]    14887006/16917053 :  88% [================>   ]    15056177/16917053 :  89% [================>   ]    15225347/16917053 :  90% [=================>  ]    15394518/16917053 :  91% [=================>  ]    15563688/16917053 :  92% [=================>  ]    15732859/16917053 :  93% [=================>  ]    15902029/16917053 :  94% [=================>  ]    16071200/16917053 :  95% [==================> ]    16240370/16917053 :  96% [==================> ]    16409541/16917053 :  97% [==================> ]    16578711/16917053 :  98% [==================> ]    16747882/16917053 :  99% [==================> ]    16917052/16917053 : 100% [===================>]
-> number of rows = 1382908
-> number of columns = 1382908
-> number of values = 16917053
-> number of values per row = 12.233
-> number loops to smooth the timing if > 1 =  16
-> number of flops to do per spmv = 541345696
Start usual CSR: 1382908
Conversion in : 0.195237s
-> Done in 1.646s
-> GFlops 0.328886s
-> Esimated performance are 2.91743 for 2rVc
Start usual 1rVc: 
Conversion in : 2.27202s
-> Done in 1.15762s
-> Number of blocks 4399065( avg. 3.8456 values per block)
-> GFlops 0.467636s
-> Max Difference in Accuracy 0
Start usual 2rVc: 
Conversion in : 2.2715s
-> Done in 0.923843s
-> Number of blocks 2711166( avg. 6.23977 values per block)
-> GFlops 0.585972s
-> Max Difference in Accuracy 0
Start usual 4rVc: 
Conversion in : 2.29624s
-> Done in 0.918231s
-> Number of blocks 1755703( avg. 9.63549 values per block)
-> GFlops 0.589553s
-> Max Difference in Accuracy 0
Start usual 8rVc: 
Conversion in : 2.31961s
-> Done in 0.975437s
-> Number of blocks 1225449( avg. 13.8048 values per block)
-> GFlops 0.554978s
-> Max Difference in Accuracy 0
===================================================
Openmp is enabled with 48 threads per default
Start openmp 1rVc: 
-> Done in 0.0756548s
-> Number of blocks 4399065( avg. 3.8456 values per block)
-> GFlops 7.15547s
-> Max Difference in Accuracy 0
Start openmp 2rVc: 
-> Done in 0.0484646s
-> Number of blocks 2711166( avg. 6.23977 values per block)
-> GFlops 11.1699s
-> Max Difference in Accuracy 0
Start openmp 4rVc: 
-> Done in 0.0408365s
-> Number of blocks 1755703( avg. 9.63549 values per block)
-> GFlops 13.2564s
-> Max Difference in Accuracy 0
Start openmp 8rVc: 
-> Done in 0.0408421s
-> Number of blocks 1225449( avg. 13.8048 values per block)
-> GFlops 13.2546s
-> Max Difference in Accuracy 0
